android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //testInstrumentationRunnerArguments clearPackageData: 'true'

        /*javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.incremental" : "true"]
            }
        }*/
    }

    /*android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/java'
            test {
                java.srcDirs += sharedTestDir
                resources.srcDirs += 'src/sharedTest/resources'
            }
            androidTest {
                java.srcDirs += sharedTestDir
            }
        }
    }*/

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            //shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    // Always show the result of every unit test, even if it passes.
    /*testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }*/

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "$composeCompilerVersion"
    }
}

dependencies {

    // App dependencies
    implementation "androidx.annotation:annotation:$androidXAnnotations"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    //implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"
    //implementation "androidx.room:room-runtime:$roomVersion"
    //kapt "androidx.room:room-compiler:$roomVersion"

    // Architecture Components
    //implementation "androidx.room:room-runtime:$roomVersion"
    //kapt "androidx.room:room-compiler:$roomVersion"
    //implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"

    //Dagger 2
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Jetpack Compose
    implementation "androidx.activity:activity-compose:$activityComposeVersion"
    implementation "androidx.compose.compiler:compiler:$composeCompilerVersion"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation "androidx.compose.animation:animation:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling-preview:$composeVersion"
    implementation "androidx.navigation:navigation-compose:$navigationVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$archLifecycleVersion"
    debugImplementation "androidx.compose.ui:ui-tooling:$composeVersion"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$composeVersion"

    //Accompanist
    implementation "com.google.accompanist:accompanist-appcompat-theme:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanistVersion"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanistVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
//    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
//    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
//    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
//    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
//    testImplementation "org.robolectric:robolectric:$robolectricVersion"
//    testImplementation "androidx.navigation:navigation-testing:$navigationVersion"
//    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
//    testImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
//    testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
//    testImplementation "com.google.truth:truth:$truthVersion"
//    testImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"

    // JVM tests - Hilt
//    testImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
//    kaptTest "com.google.dagger:hilt-compiler:$hiltVersion"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"

    // AndroidX Test - JVM testing
//    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
//    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
//    testImplementation "androidx.test:rules:$androidXTestRulesVersion"
//    implementation "androidx.test:core:$androidXTestCoreVersion"

    // AndroidX Test - Instrumented testing
//    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
//    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
//    androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
//    androidTestImplementation "androidx.room:room-testing:$roomVersion"
//    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
//    androidTestImplementation "androidx.navigation:navigation-testing:$navigationVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
//    androidTestImplementation "org.robolectric:annotations:$robolectricVersion"
//    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // AndroidX Test - Hilt testing
//    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
//    kaptAndroidTest "com.google.dagger:hilt-compiler:$hiltVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    //Retrofit
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    //Okhttp Logging Interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$okLoggingVersion"

    //Gson
    implementation "com.google.code.gson:gson:$gsonVersion"

    //Chucker
    debugImplementation "com.github.chuckerteam.chucker:library:$chuckerVersion"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:$chuckerVersion"



}